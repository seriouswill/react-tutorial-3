{"version":3,"sources":["tweet.js","App.js","reportWebVitals.js","index.js"],"names":["Tweet","name","message","useState","likes","setLikes","className","onClick","App","users","map","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAkCeA,MAnBf,YAAiC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,QAElB,EAAwBC,mBAAS,GAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KAQA,OACI,sBAAKC,UAAU,QAAf,UACI,6BAAKL,IACL,4BAAIC,IACJ,yCAAYE,KACZ,wBAAQG,QAXA,kBAChBF,EAASD,EAAQ,IAUT,0BCCGI,MA1Bf,WAEE,MAA0BL,mBAAS,CACjC,CAACF,KAAM,KAAMC,QAAS,eAAgBE,MAAO,GAC7C,CAACH,KAAM,OAAQC,QAAS,kBAAmBE,MAAO,GAClD,CAACH,KAAM,OAAQC,QAAS,oBAAqBE,MAAO,KAHtD,mBAAOK,EAAP,KAOA,OAPA,KAQE,qBAAKH,UAAU,MAAf,SACGG,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAOV,KAAMU,EAAKV,KAAMC,QAASS,EAAKT,QAASE,MAAOO,EAAKP,cCLpDQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e0d354a4.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./App.css\"\r\n\r\n// function likeButton() {\r\n//     const [likes, setLikes] = useState(0);\r\n    \r\n//     const addLike = () => (\r\n//     setLikes(likes + 1)\r\n// )\r\n\r\n\r\n// }\r\n\r\n\r\n\r\nfunction Tweet({name, message}) {\r\n\r\n    let [likes, setLikes] = useState(0);\r\n    \r\n    const addLike = () => (\r\n    setLikes(likes + 1)\r\n)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"tweet\">\r\n            <h3>{name}</h3>\r\n            <p>{message}</p>\r\n            <h3>Likes: {likes}</h3>\r\n            <button onClick={addLike}>Add Like</button>\r\n        </div>)\r\n}\r\n\r\nexport default Tweet;","import React, {useState} from \"react\";\nimport Tweet from \"./tweet\"\n\n\n\nfunction App() {\n\n  const [users, setUsers] = useState([\n    {name: \"Ed\", message: \"Random Tweet\", likes: 0},\n    {name: \"Bill\", message: \"Fantastic Tweet\", likes: 0},\n    {name: \"Greg\", message: \"Bloody good Tweet\", likes: 0},\n    ]);\n  \n\n  return (\n    <div className=\"app\">\n      {users.map(user => (\n        <Tweet name={user.name} message={user.message} likes={user.likes}/>\n      ))}\n\n      \n      {/* <Tweet name=\"Will\" message=\"Random Tweet\" number=\"3\"/>\n      <Tweet name=\"Kate\" message=\"Different Tweet\" number=\"5\"/>\n      <Tweet name=\"Paddy\" message=\"Silly Tweet\" number=\"6\"/>\n      <Tweet name=\"Pip\" message=\"Dark Tweet\" number=\"7\"/>\n      <Tweet name=\"Sammy\" message=\"Daft Tweet\" number=\"8\"/> */}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}